library(devtools)
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
mydir <-  '/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario'
strUrl <-  'http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip'
strFilename <- 'datos_abiertos_covid19.zip'
strConfirmedResult  = 1
idaysForGraphToCutOff = 7
imovingAverageDays = 7
notDead = '9999-99-99'
dfrAllR0 = data.frame(stringsAsFactors = FALSE)
#######################################
# Start here
#######################################
#download and load into dataframe
setwd(mydir)
if (FALSE) {
download.file(strUrl, strFilename )
unzipfile <- unzip (strFilename, list = TRUE)
unzip (strFilename, unzipfile$Name)
dfrConfirmedCases <- read.csv ( file=unzipfile$Name)
} else {
dfrDatabase <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200811COVID19MEXICO.csv")
}
dfrDatabase[,"SOBREVIVE"] <- ifelse( dfrDatabase$FECHA_DEF == notDead ,"VIVO","MUERTO")
dfrDatabase[,"TSEXO"] <- ifelse( dfrDatabase$SEXO == 1 ,"MUJER","HOMBRE")
dfrDatabase[,"TINTUBADO"] <- ifelse( dfrDatabase$INTUBADO == 1 ,TRUE,FALSE)
dfrDatabase[,"TNEUMONIA"] <- ifelse( dfrDatabase$NEUMONIA == 1 ,TRUE,FALSE)
dfrDatabase[,"TDIABETES"] <- ifelse( dfrDatabase$DIABETES == 1 ,TRUE,FALSE)
dfrDatabase[,"THIPERTENSION"] <- ifelse( dfrDatabase$HIPERTENSION == 1 ,TRUE,FALSE)
dfrDatabase[,"TEPOC"] <- ifelse( dfrDatabase$EPOC == 1 ,TRUE,FALSE)
dfrDatabase[,"TASMA" ] <- ifelse( dfrDatabase$ASMA  == 1 ,TRUE,FALSE)
dfrDatabase[,"TINMUSUPR" ] <- ifelse( dfrDatabase$INMUSUPR  == 1 ,TRUE,FALSE)
dfrDatabase[,"TOTRA_COM"] <- ifelse( dfrDatabase$OTRA_COM == 1 ,TRUE,FALSE)
dfrDatabase[,"TCARDIOVASCULAR"] <- ifelse( dfrDatabase$CARDIOVASCULAR == 1 ,TRUE,FALSE)
dfrDatabase[,"TOBESIDAD"] <- ifelse( dfrDatabase$OBESIDAD == 1 ,TRUE,FALSE)
dfrDatabase[,"TRENAL_CRONICA"] <- ifelse( dfrDatabase$RENAL_CRONICA == 1 ,TRUE,FALSE)
dfrDatabase[,"TTABAQUISMO"] <- ifelse( dfrDatabase$TABAQUISMO == 1 ,TRUE,FALSE)
dfrDatabase[,"RANGO"] <- paste( (round(dfrDatabase$EDAD / 20 ) -1)  *20 ,"a",round(dfrDatabase$EDAD / 20 )   *20)
dfrDatabase <- dfrDatabase[dfrDatabase$RESULTADO ==1 ,]
samplesize <- round(dim (dfrDatabase)[1]*.4)
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabase[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
dfrTrain <- dfrCases [s,]
dfrTest <- dfrCases [-s,]
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO , dfrTrain, method = "class")
#dtm <-rpart( SOBREVIVE ~ +TINTUBADO + EDAD , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
#https://duckduckgo.com/?q=decision+tree+in+r&iax=videos&ia=videos&iai=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJFJIQ0_2ijg
#https://www.gormanalysis.com/blog/decision-trees-in-r-using-rpart/
# Gets data from
remove(list = ls())
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
library(devtools)
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
mydir <-  '/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario'
strUrl <-  'http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip'
strFilename <- 'datos_abiertos_covid19.zip'
strConfirmedResult  = 1
idaysForGraphToCutOff = 7
imovingAverageDays = 7
notDead = '9999-99-99'
dfrAllR0 = data.frame(stringsAsFactors = FALSE)
#######################################
# Start here
#######################################
#download and load into dataframe
setwd(mydir)
if (FALSE) {
download.file(strUrl, strFilename )
unzipfile <- unzip (strFilename, list = TRUE)
unzip (strFilename, unzipfile$Name)
dfrConfirmedCases <- read.csv ( file=unzipfile$Name)
} else {
dfrDatabase <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200811COVID19MEXICO.csv")
}
dfrDatabase[,"SOBREVIVE"] <- ifelse( dfrDatabase$FECHA_DEF == notDead ,"VIVO","MUERTO")
dfrDatabase[,"TSEXO"] <- ifelse( dfrDatabase$SEXO == 1 ,"MUJER","HOMBRE")
dfrDatabase[,"TINTUBADO"] <- ifelse( dfrDatabase$INTUBADO == 1 ,TRUE,FALSE)
dfrDatabase[,"TNEUMONIA"] <- ifelse( dfrDatabase$NEUMONIA == 1 ,TRUE,FALSE)
dfrDatabase[,"TDIABETES"] <- ifelse( dfrDatabase$DIABETES == 1 ,TRUE,FALSE)
dfrDatabase[,"THIPERTENSION"] <- ifelse( dfrDatabase$HIPERTENSION == 1 ,TRUE,FALSE)
dfrDatabase[,"TEPOC"] <- ifelse( dfrDatabase$EPOC == 1 ,TRUE,FALSE)
dfrDatabase[,"TASMA" ] <- ifelse( dfrDatabase$ASMA  == 1 ,TRUE,FALSE)
dfrDatabase[,"TINMUSUPR" ] <- ifelse( dfrDatabase$INMUSUPR  == 1 ,TRUE,FALSE)
dfrDatabase[,"TOTRA_COM"] <- ifelse( dfrDatabase$OTRA_COM == 1 ,TRUE,FALSE)
dfrDatabase[,"TCARDIOVASCULAR"] <- ifelse( dfrDatabase$CARDIOVASCULAR == 1 ,TRUE,FALSE)
dfrDatabase[,"TOBESIDAD"] <- ifelse( dfrDatabase$OBESIDAD == 1 ,TRUE,FALSE)
dfrDatabase[,"TRENAL_CRONICA"] <- ifelse( dfrDatabase$RENAL_CRONICA == 1 ,TRUE,FALSE)
dfrDatabase[,"TTABAQUISMO"] <- ifelse( dfrDatabase$TABAQUISMO == 1 ,TRUE,FALSE)
dfrDatabase[,"RANGO"] <- paste( (round(dfrDatabase$EDAD / 20 ) -1)  *20 ,"a",round(dfrDatabase$EDAD / 20 )   *20)
dfrDatabase <- dfrDatabase[dfrDatabase$RESULTADO ==1 ,]
samplesize <- round(dim (dfrDatabase)[1]*.8)
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabase[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
dfrTrain <- dfrCases [s,]
dfrTest <- dfrCases [-s,]
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO , dfrTrain, method = "class")
#dtm <-rpart( SOBREVIVE ~ +TINTUBADO + EDAD , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~ TDIABETES+THIPERTENSION+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~EDAD , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~EDAD , dfrTrain, method = "anova")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANG, dfrTrain, method = "anova")
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO, dfrTrain, method = "anova")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO, dfrTrain, method = "anova")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO , dfrTrain, method = "anova")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE+ TNEUMONIA~ +TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(TNEUMONIA~ +TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(TNEUMONIA~ +TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(TNEUMONIA~ +TDIABETES+THIPERTENSION+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(TNEUMONIA~ +TDIABETES+THIPERTENSION , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(TNEUMONIA~ RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(TNEUMONIA~ TINTUBADO, dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(TNEUMONIA~ THIPERTENSION, dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "anova")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm
#https://duckduckgo.com/?q=decision+tree+in+r&iax=videos&ia=videos&iai=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJFJIQ0_2ijg
#https://www.gormanalysis.com/blog/decision-trees-in-r-using-rpart/
#https://www.dummies.com/programming/decision-trees-r/
#Printing dtm shows the values
#Each row corresponds to a node on the tree.
#The first entry in the row is the node number followed by a right parenthesis.
#The second is the variable and the value that make up the split.
#The third is the number of classified cases at that node.
#The fourth, loss, is the number of misclassified cases at the node. Misclassified? Compared to what? Compared to the next entry,
#yval, which is the tree’s best guess of the species at that node.
#The final entry is a parenthesized set of proportions that correspond to the proportion of each species at the node.
remove(list = ls())
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
library(devtools)
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
mydir <-  '/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario'
strUrl <-  'http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip'
strFilename <- 'datos_abiertos_covid19.zip'
strConfirmedResult  = 1
idaysForGraphToCutOff = 7
imovingAverageDays = 7
notDead = '9999-99-99'
dfrAllR0 = data.frame(stringsAsFactors = FALSE)
#######################################
# Start here
#######################################
#download and load into dataframe
setwd(mydir)
if (FALSE) {
download.file(strUrl, strFilename )
unzipfile <- unzip (strFilename, list = TRUE)
unzip (strFilename, unzipfile$Name)
dfrConfirmedCases <- read.csv ( file=unzipfile$Name)
} else {
dfrDatabase <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200811COVID19MEXICO.csv")
}
dfrDatabase[,"SOBREVIVE"] <- ifelse( dfrDatabase$FECHA_DEF == notDead ,"VIVO","MUERTO")
dfrDatabase[,"TSEXO"] <- ifelse( dfrDatabase$SEXO == 1 ,"MUJER","HOMBRE")
dfrDatabase[,"TINTUBADO"] <- ifelse( dfrDatabase$INTUBADO == 1 ,TRUE,FALSE)
dfrDatabase[,"TNEUMONIA"] <- ifelse( dfrDatabase$NEUMONIA == 1 ,TRUE,FALSE)
dfrDatabase[,"TDIABETES"] <- ifelse( dfrDatabase$DIABETES == 1 ,TRUE,FALSE)
dfrDatabase[,"THIPERTENSION"] <- ifelse( dfrDatabase$HIPERTENSION == 1 ,TRUE,FALSE)
dfrDatabase[,"TEPOC"] <- ifelse( dfrDatabase$EPOC == 1 ,TRUE,FALSE)
dfrDatabase[,"TASMA" ] <- ifelse( dfrDatabase$ASMA  == 1 ,TRUE,FALSE)
dfrDatabase[,"TINMUSUPR" ] <- ifelse( dfrDatabase$INMUSUPR  == 1 ,TRUE,FALSE)
dfrDatabase[,"TOTRA_COM"] <- ifelse( dfrDatabase$OTRA_COM == 1 ,TRUE,FALSE)
dfrDatabase[,"TCARDIOVASCULAR"] <- ifelse( dfrDatabase$CARDIOVASCULAR == 1 ,TRUE,FALSE)
dfrDatabase[,"TOBESIDAD"] <- ifelse( dfrDatabase$OBESIDAD == 1 ,TRUE,FALSE)
dfrDatabase[,"TRENAL_CRONICA"] <- ifelse( dfrDatabase$RENAL_CRONICA == 1 ,TRUE,FALSE)
dfrDatabase[,"TTABAQUISMO"] <- ifelse( dfrDatabase$TABAQUISMO == 1 ,TRUE,FALSE)
dfrDatabase[,"RANGO"] <- paste( (round(dfrDatabase$EDAD / 20 ) -1)  *20 ,"a",round(dfrDatabase$EDAD / 20 )   *20)
dfrDatabase <- dfrDatabase[dfrDatabase$RESULTADO ==1 & dfrDatabase$ENTIDAD_RES==16  ,]
samplesize <- round(dim (dfrDatabase)[1]*.8)
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabase[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
dfrTrain <- dfrCases [s,]
dfrTest <- dfrCases [-s,]
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "class")
#rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "SOBREVIVE", type=4)
dfm
dfr
dtm
#https://duckduckgo.com/?q=decision+tree+in+r&iax=videos&ia=videos&iai=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJFJIQ0_2ijg
#https://www.gormanalysis.com/blog/decision-trees-in-r-using-rpart/
#https://www.dummies.com/programming/decision-trees-r/
#Printing dtm shows the values
#Each row corresponds to a node on the tree.
#The first entry in the row is the node number followed by a right parenthesis.
#The second is the variable and the value that make up the split.
#The third is the number of classified cases at that node.
#The fourth, loss, is the number of misclassified cases at the node. Misclassified? Compared to what? Compared to the next entry,
#yval, which is the tree’s best guess of the species at that node.
#The final entry is a parenthesized set of proportions that correspond to the proportion of each species at the node.
remove(list = ls())
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
library(devtools)
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
mydir <-  '/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario'
strUrl <-  'http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip'
strFilename <- 'datos_abiertos_covid19.zip'
strConfirmedResult  = 1
idaysForGraphToCutOff = 7
imovingAverageDays = 7
notDead = '9999-99-99'
dfrAllR0 = data.frame(stringsAsFactors = FALSE)
#######################################
# Start here
#######################################
#download and load into dataframe
setwd(mydir)
if (FALSE) {
download.file(strUrl, strFilename )
unzipfile <- unzip (strFilename, list = TRUE)
unzip (strFilename, unzipfile$Name)
dfrConfirmedCases <- read.csv ( file=unzipfile$Name)
} else {
dfrDatabase <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200811COVID19MEXICO.csv")
}
dfrDatabase[,"SOBREVIVE"] <- ifelse( dfrDatabase$FECHA_DEF == notDead ,"VIVO","MUERTO")
dfrDatabase[,"TSEXO"] <- ifelse( dfrDatabase$SEXO == 1 ,"MUJER","HOMBRE")
dfrDatabase[,"TINTUBADO"] <- ifelse( dfrDatabase$INTUBADO == 1 ,TRUE,FALSE)
dfrDatabase[,"TNEUMONIA"] <- ifelse( dfrDatabase$NEUMONIA == 1 ,TRUE,FALSE)
dfrDatabase[,"TDIABETES"] <- ifelse( dfrDatabase$DIABETES == 1 ,TRUE,FALSE)
dfrDatabase[,"THIPERTENSION"] <- ifelse( dfrDatabase$HIPERTENSION == 1 ,TRUE,FALSE)
dfrDatabase[,"TEPOC"] <- ifelse( dfrDatabase$EPOC == 1 ,TRUE,FALSE)
dfrDatabase[,"TASMA" ] <- ifelse( dfrDatabase$ASMA  == 1 ,TRUE,FALSE)
dfrDatabase[,"TINMUSUPR" ] <- ifelse( dfrDatabase$INMUSUPR  == 1 ,TRUE,FALSE)
dfrDatabase[,"TOTRA_COM"] <- ifelse( dfrDatabase$OTRA_COM == 1 ,TRUE,FALSE)
dfrDatabase[,"TCARDIOVASCULAR"] <- ifelse( dfrDatabase$CARDIOVASCULAR == 1 ,TRUE,FALSE)
dfrDatabase[,"TOBESIDAD"] <- ifelse( dfrDatabase$OBESIDAD == 1 ,TRUE,FALSE)
dfrDatabase[,"TRENAL_CRONICA"] <- ifelse( dfrDatabase$RENAL_CRONICA == 1 ,TRUE,FALSE)
dfrDatabase[,"TTABAQUISMO"] <- ifelse( dfrDatabase$TABAQUISMO == 1 ,TRUE,FALSE)
dfrDatabase[,"RANGO"] <- paste( (round(dfrDatabase$EDAD / 20 ) -1)  *20 ,"a",round(dfrDatabase$EDAD / 20 )   *20)
dfrDatabase <- dfrDatabase[dfrDatabase$RESULTADO ==1 & dfrDatabase$ENTIDAD_RES==17  ,]
samplesize <- round(dim (dfrDatabase)[1]*.8)
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabase[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
dfrTrain <- dfrCases [s,]
dfrTest <- dfrCases [-s,]
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "class")
#rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "SOBREVIVE", type=4)
print(dtm)
#https://duckduckgo.com/?q=decision+tree+in+r&iax=videos&ia=videos&iai=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJFJIQ0_2ijg
#https://www.gormanalysis.com/blog/decision-trees-in-r-using-rpart/
#https://www.dummies.com/programming/decision-trees-r/
#Printing dtm shows the values
#Each row corresponds to a node on the tree.
#The first entry in the row is the node number followed by a right parenthesis.
#The second is the variable and the value that make up the split.
#The third is the number of classified cases at that node.
#The fourth, loss, is the number of misclassified cases at the node. Misclassified? Compared to what? Compared to the next entry,
#yval, which is the tree’s best guess of the species at that node.
#The final entry is a parenthesized set of proportions that correspond to the proportion of each species at the node.
remove(list = ls())
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
library(devtools)
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
mydir <-  '/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario'
strUrl <-  'http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip'
strFilename <- 'datos_abiertos_covid19.zip'
strConfirmedResult  = 1
idaysForGraphToCutOff = 7
imovingAverageDays = 7
notDead = '9999-99-99'
dfrAllR0 = data.frame(stringsAsFactors = FALSE)
#######################################
# Start here
#######################################
#download and load into dataframe
setwd(mydir)
if (FALSE) {
download.file(strUrl, strFilename )
unzipfile <- unzip (strFilename, list = TRUE)
unzip (strFilename, unzipfile$Name)
dfrConfirmedCases <- read.csv ( file=unzipfile$Name)
} else {
dfrDatabase <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200811COVID19MEXICO.csv")
}
dfrDatabase[,"SOBREVIVE"] <- ifelse( dfrDatabase$FECHA_DEF == notDead ,"VIVO","MUERTO")
dfrDatabase[,"TSEXO"] <- ifelse( dfrDatabase$SEXO == 1 ,"MUJER","HOMBRE")
dfrDatabase[,"TINTUBADO"] <- ifelse( dfrDatabase$INTUBADO == 1 ,TRUE,FALSE)
dfrDatabase[,"TNEUMONIA"] <- ifelse( dfrDatabase$NEUMONIA == 1 ,TRUE,FALSE)
dfrDatabase[,"TDIABETES"] <- ifelse( dfrDatabase$DIABETES == 1 ,TRUE,FALSE)
dfrDatabase[,"THIPERTENSION"] <- ifelse( dfrDatabase$HIPERTENSION == 1 ,TRUE,FALSE)
dfrDatabase[,"TEPOC"] <- ifelse( dfrDatabase$EPOC == 1 ,TRUE,FALSE)
dfrDatabase[,"TASMA" ] <- ifelse( dfrDatabase$ASMA  == 1 ,TRUE,FALSE)
dfrDatabase[,"TINMUSUPR" ] <- ifelse( dfrDatabase$INMUSUPR  == 1 ,TRUE,FALSE)
dfrDatabase[,"TOTRA_COM"] <- ifelse( dfrDatabase$OTRA_COM == 1 ,TRUE,FALSE)
dfrDatabase[,"TCARDIOVASCULAR"] <- ifelse( dfrDatabase$CARDIOVASCULAR == 1 ,TRUE,FALSE)
dfrDatabase[,"TOBESIDAD"] <- ifelse( dfrDatabase$OBESIDAD == 1 ,TRUE,FALSE)
dfrDatabase[,"TRENAL_CRONICA"] <- ifelse( dfrDatabase$RENAL_CRONICA == 1 ,TRUE,FALSE)
dfrDatabase[,"TTABAQUISMO"] <- ifelse( dfrDatabase$TABAQUISMO == 1 ,TRUE,FALSE)
dfrDatabase[,"RANGO"] <- paste( (round(dfrDatabase$EDAD / 20 ) -1)  *20 ,"a",round(dfrDatabase$EDAD / 20 )   *20)
dfrDatabasePar <- dfrDatabase[dfrDatabase$RESULTADO ==1 & dfrDatabase$ENTIDAD_RES==19  ,]
samplesize <- round(dim (dfrDatabase)[1])
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabasePar[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
dfrTrain <- dfrCases [s,]
dfrTest <- dfrCases [-s,]
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "class")
#rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "SOBREVIVE", type=4)
print(dtm)
#https://duckduckgo.com/?q=decision+tree+in+r&iax=videos&ia=videos&iai=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJFJIQ0_2ijg
#https://www.gormanalysis.com/blog/decision-trees-in-r-using-rpart/
#https://www.dummies.com/programming/decision-trees-r/
#Printing dtm shows the values
#Each row corresponds to a node on the tree.
#The first entry in the row is the node number followed by a right parenthesis.
#The second is the variable and the value that make up the split.
#The third is the number of classified cases at that node.
#The fourth, loss, is the number of misclassified cases at the node. Misclassified? Compared to what? Compared to the next entry,
#yval, which is the tree’s best guess of the species at that node.
#The final entry is a parenthesized set of proportions that correspond to the proportion of each species at the node.
remove(list = ls())
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
library(devtools)
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
mydir <-  '/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario'
strUrl <-  'http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip'
strFilename <- 'datos_abiertos_covid19.zip'
strConfirmedResult  = 1
idaysForGraphToCutOff = 7
imovingAverageDays = 7
notDead = '9999-99-99'
vecListaEstados <- c(1:32)
vecnombreEstados <-c ("AGUASCALIENTES","BAJA_CALIFORNIA","BAJA_CALIFORNIA_SUR","CAMPECHE",	"COAHUILA",	"COLIMA","CHIAPAS",	"CHIHUAHUA","CDMX",	"DURANGO","GUANAJUATO",	"GUERRERO",	"HIDALGO","JALISCO","ESTADO_DE_MEXICO","MICHOACAN","MORELOS","NAYARIT","NUEVO_LEON","OAXACA","PUEBLA","QUERETARO","QUINTANA_ROO","SAN_LUIS_POTOSI","SINALOA","SONORA","TABASCO","TAMAULIPAS","TLAXCALA","VERACRUZ","YUCATAN","ZACATECAS")
#######################################
# Start here
#######################################
#download and load into dataframe
setwd(mydir)
if (FALSE) {
download.file(strUrl, strFilename )
unzipfile <- unzip (strFilename, list = TRUE)
unzip (strFilename, unzipfile$Name)
dfrConfirmedCases <- read.csv ( file=unzipfile$Name)
} else {
dfrDatabase <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200811COVID19MEXICO.csv")
}
dfrDatabase[,"SOBREVIVE"] <- ifelse( dfrDatabase$FECHA_DEF == notDead ,"VIVO","MUERTO")
dfrDatabase[,"TSEXO"] <- ifelse( dfrDatabase$SEXO == 1 ,"MUJER","HOMBRE")
dfrDatabase[,"TINTUBADO"] <- ifelse( dfrDatabase$INTUBADO == 1 ,TRUE,FALSE)
dfrDatabase[,"TNEUMONIA"] <- ifelse( dfrDatabase$NEUMONIA == 1 ,TRUE,FALSE)
dfrDatabase[,"TDIABETES"] <- ifelse( dfrDatabase$DIABETES == 1 ,TRUE,FALSE)
dfrDatabase[,"THIPERTENSION"] <- ifelse( dfrDatabase$HIPERTENSION == 1 ,TRUE,FALSE)
dfrDatabase[,"TEPOC"] <- ifelse( dfrDatabase$EPOC == 1 ,TRUE,FALSE)
dfrDatabase[,"TASMA" ] <- ifelse( dfrDatabase$ASMA  == 1 ,TRUE,FALSE)
dfrDatabase[,"TINMUSUPR" ] <- ifelse( dfrDatabase$INMUSUPR  == 1 ,TRUE,FALSE)
dfrDatabase[,"TOTRA_COM"] <- ifelse( dfrDatabase$OTRA_COM == 1 ,TRUE,FALSE)
dfrDatabase[,"TCARDIOVASCULAR"] <- ifelse( dfrDatabase$CARDIOVASCULAR == 1 ,TRUE,FALSE)
dfrDatabase[,"TOBESIDAD"] <- ifelse( dfrDatabase$OBESIDAD == 1 ,TRUE,FALSE)
dfrDatabase[,"TRENAL_CRONICA"] <- ifelse( dfrDatabase$RENAL_CRONICA == 1 ,TRUE,FALSE)
dfrDatabase[,"TTABAQUISMO"] <- ifelse( dfrDatabase$TABAQUISMO == 1 ,TRUE,FALSE)
dfrDatabase[,"RANGO"] <- paste( (round(dfrDatabase$EDAD / 20 ) -1)  *20 ,"a",round(dfrDatabase$EDAD / 20 )   *20)
for (i in 1:length(vecListaEstados)) {
dfrDatabasePar <- dfrDatabase[dfrDatabase$RESULTADO ==1 & dfrDatabase$ENTIDAD_RES==i  ,]
samplesize <- round(dim (dfrDatabase)[1])
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabasePar[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
dfrTrain <- dfrCases [s,]
dfrTest <- dfrCases [-s,]
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "class")
fancyRpartPlot(dtm, caption = paste("SOBREVIVE", vecnombreEstados[[i]] ), type=4)
print(dtm)
}
#https://duckduckgo.com/?q=decision+tree+in+r&iax=videos&ia=videos&iai=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJFJIQ0_2ijg
#https://www.gormanalysis.com/blog/decision-trees-in-r-using-rpart/
#https://www.dummies.com/programming/decision-trees-r/
#Printing dtm shows the values
#Each row corresponds to a node on the tree.
#The first entry in the row is the node number followed by a right parenthesis.
#The second is the variable and the value that make up the split.
#The third is the number of classified cases at that node.
#The fourth, loss, is the number of misclassified cases at the node. Misclassified? Compared to what? Compared to the next entry,
#yval, which is the tree’s best guess of the species at that node.
#The final entry is a parenthesized set of proportions that correspond to the proportion of each species at the node.
remove(list = ls())
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
library(devtools)
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
mydir <-  '/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario'
strUrl <-  'http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip'
strFilename <- 'datos_abiertos_covid19.zip'
strConfirmedResult  = 1
idaysForGraphToCutOff = 7
imovingAverageDays = 7
notDead = '9999-99-99'
vecListaEstados <- c(1:32)
vecnombreEstados <-c ("AGUASCALIENTES","BAJA_CALIFORNIA","BAJA_CALIFORNIA_SUR","CAMPECHE",	"COAHUILA",	"COLIMA","CHIAPAS",	"CHIHUAHUA","CDMX",	"DURANGO","GUANAJUATO",	"GUERRERO",	"HIDALGO","JALISCO","ESTADO_DE_MEXICO","MICHOACAN","MORELOS","NAYARIT","NUEVO_LEON","OAXACA","PUEBLA","QUERETARO","QUINTANA_ROO","SAN_LUIS_POTOSI","SINALOA","SONORA","TABASCO","TAMAULIPAS","TLAXCALA","VERACRUZ","YUCATAN","ZACATECAS")
#######################################
# Start here
#######################################
#download and load into dataframe
setwd(mydir)
if (FALSE) {
download.file(strUrl, strFilename )
unzipfile <- unzip (strFilename, list = TRUE)
unzip (strFilename, unzipfile$Name)
dfrConfirmedCases <- read.csv ( file=unzipfile$Name)
} else {
dfrDatabase <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200811COVID19MEXICO.csv")
}
dfrDatabase[,"SOBREVIVE"] <- ifelse( dfrDatabase$FECHA_DEF == notDead ,"VIVO","MUERTO")
dfrDatabase[,"TSEXO"] <- ifelse( dfrDatabase$SEXO == 1 ,"MUJER","HOMBRE")
dfrDatabase[,"TINTUBADO"] <- ifelse( dfrDatabase$INTUBADO == 1 ,TRUE,FALSE)
dfrDatabase[,"TNEUMONIA"] <- ifelse( dfrDatabase$NEUMONIA == 1 ,TRUE,FALSE)
dfrDatabase[,"TDIABETES"] <- ifelse( dfrDatabase$DIABETES == 1 ,TRUE,FALSE)
dfrDatabase[,"THIPERTENSION"] <- ifelse( dfrDatabase$HIPERTENSION == 1 ,TRUE,FALSE)
dfrDatabase[,"TEPOC"] <- ifelse( dfrDatabase$EPOC == 1 ,TRUE,FALSE)
dfrDatabase[,"TASMA" ] <- ifelse( dfrDatabase$ASMA  == 1 ,TRUE,FALSE)
dfrDatabase[,"TINMUSUPR" ] <- ifelse( dfrDatabase$INMUSUPR  == 1 ,TRUE,FALSE)
dfrDatabase[,"TOTRA_COM"] <- ifelse( dfrDatabase$OTRA_COM == 1 ,TRUE,FALSE)
dfrDatabase[,"TCARDIOVASCULAR"] <- ifelse( dfrDatabase$CARDIOVASCULAR == 1 ,TRUE,FALSE)
dfrDatabase[,"TOBESIDAD"] <- ifelse( dfrDatabase$OBESIDAD == 1 ,TRUE,FALSE)
dfrDatabase[,"TRENAL_CRONICA"] <- ifelse( dfrDatabase$RENAL_CRONICA == 1 ,TRUE,FALSE)
dfrDatabase[,"TTABAQUISMO"] <- ifelse( dfrDatabase$TABAQUISMO == 1 ,TRUE,FALSE)
dfrDatabase[,"RANGO"] <- paste( (round(dfrDatabase$EDAD / 20 ) -1)  *20 ,"a",round(dfrDatabase$EDAD / 20 )   *20)
for (i in 1:length(vecListaEstados)) {
dfrDatabasePar <- dfrDatabase[dfrDatabase$RESULTADO ==1 & dfrDatabase$ENTIDAD_RES==i  ,]
samplesize <- round(dim (dfrDatabase)[1])
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabasePar[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
dfrTrain <- dfrCases [s,]
dfrTest <- dfrCases [-s,]
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "class")
fancyRpartPlot(dtm, caption = paste("SOBREVIVE", vecnombreEstados[[i]] ), type=4)
print(dtm)
}
