<<<<<<< HEAD
library(devtools)
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
mydir <-  '/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario'
strUrl <-  'http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip'
strFilename <- 'datos_abiertos_covid19.zip'
strConfirmedResult  = 1
idaysForGraphToCutOff = 7
imovingAverageDays = 7
notDead = '9999-99-99'
dfrAllR0 = data.frame(stringsAsFactors = FALSE)
#######################################
# Start here
#######################################
#download and load into dataframe
setwd(mydir)
if (FALSE) {
download.file(strUrl, strFilename )
unzipfile <- unzip (strFilename, list = TRUE)
unzip (strFilename, unzipfile$Name)
dfrConfirmedCases <- read.csv ( file=unzipfile$Name)
} else {
dfrDatabase <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200811COVID19MEXICO.csv")
}
dfrDatabase[,"SOBREVIVE"] <- ifelse( dfrDatabase$FECHA_DEF == notDead ,"VIVO","MUERTO")
dfrDatabase[,"TSEXO"] <- ifelse( dfrDatabase$SEXO == 1 ,"MUJER","HOMBRE")
dfrDatabase[,"TINTUBADO"] <- ifelse( dfrDatabase$INTUBADO == 1 ,TRUE,FALSE)
dfrDatabase[,"TNEUMONIA"] <- ifelse( dfrDatabase$NEUMONIA == 1 ,TRUE,FALSE)
dfrDatabase[,"TDIABETES"] <- ifelse( dfrDatabase$DIABETES == 1 ,TRUE,FALSE)
dfrDatabase[,"THIPERTENSION"] <- ifelse( dfrDatabase$HIPERTENSION == 1 ,TRUE,FALSE)
dfrDatabase[,"TEPOC"] <- ifelse( dfrDatabase$EPOC == 1 ,TRUE,FALSE)
dfrDatabase[,"TASMA" ] <- ifelse( dfrDatabase$ASMA  == 1 ,TRUE,FALSE)
dfrDatabase[,"TINMUSUPR" ] <- ifelse( dfrDatabase$INMUSUPR  == 1 ,TRUE,FALSE)
dfrDatabase[,"TOTRA_COM"] <- ifelse( dfrDatabase$OTRA_COM == 1 ,TRUE,FALSE)
dfrDatabase[,"TCARDIOVASCULAR"] <- ifelse( dfrDatabase$CARDIOVASCULAR == 1 ,TRUE,FALSE)
dfrDatabase[,"TOBESIDAD"] <- ifelse( dfrDatabase$OBESIDAD == 1 ,TRUE,FALSE)
dfrDatabase[,"TRENAL_CRONICA"] <- ifelse( dfrDatabase$RENAL_CRONICA == 1 ,TRUE,FALSE)
dfrDatabase[,"TTABAQUISMO"] <- ifelse( dfrDatabase$TABAQUISMO == 1 ,TRUE,FALSE)
dfrDatabase[,"RANGO"] <- paste( (round(dfrDatabase$EDAD / 20 ) -1)  *20 ,"a",round(dfrDatabase$EDAD / 20 )   *20)
dfrDatabase <- dfrDatabase[dfrDatabase$RESULTADO ==1 ,]
samplesize <- round(dim (dfrDatabase)[1]*.4)
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabase[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
dfrTrain <- dfrCases [s,]
dfrTest <- dfrCases [-s,]
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO , dfrTrain, method = "class")
#dtm <-rpart( SOBREVIVE ~ +TINTUBADO + EDAD , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
#https://duckduckgo.com/?q=decision+tree+in+r&iax=videos&ia=videos&iai=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJFJIQ0_2ijg
#https://www.gormanalysis.com/blog/decision-trees-in-r-using-rpart/
# Gets data from
remove(list = ls())
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
library(devtools)
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
mydir <-  '/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario'
strUrl <-  'http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip'
strFilename <- 'datos_abiertos_covid19.zip'
strConfirmedResult  = 1
idaysForGraphToCutOff = 7
imovingAverageDays = 7
notDead = '9999-99-99'
dfrAllR0 = data.frame(stringsAsFactors = FALSE)
#######################################
# Start here
#######################################
#download and load into dataframe
setwd(mydir)
if (FALSE) {
download.file(strUrl, strFilename )
unzipfile <- unzip (strFilename, list = TRUE)
unzip (strFilename, unzipfile$Name)
dfrConfirmedCases <- read.csv ( file=unzipfile$Name)
} else {
dfrDatabase <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200811COVID19MEXICO.csv")
}
dfrDatabase[,"SOBREVIVE"] <- ifelse( dfrDatabase$FECHA_DEF == notDead ,"VIVO","MUERTO")
dfrDatabase[,"TSEXO"] <- ifelse( dfrDatabase$SEXO == 1 ,"MUJER","HOMBRE")
dfrDatabase[,"TINTUBADO"] <- ifelse( dfrDatabase$INTUBADO == 1 ,TRUE,FALSE)
dfrDatabase[,"TNEUMONIA"] <- ifelse( dfrDatabase$NEUMONIA == 1 ,TRUE,FALSE)
dfrDatabase[,"TDIABETES"] <- ifelse( dfrDatabase$DIABETES == 1 ,TRUE,FALSE)
=======
>>>>>>> origin/master
dfrDatabase[,"THIPERTENSION"] <- ifelse( dfrDatabase$HIPERTENSION == 1 ,TRUE,FALSE)
dfrDatabase[,"TEPOC"] <- ifelse( dfrDatabase$EPOC == 1 ,TRUE,FALSE)
dfrDatabase[,"TASMA" ] <- ifelse( dfrDatabase$ASMA  == 1 ,TRUE,FALSE)
dfrDatabase[,"TINMUSUPR" ] <- ifelse( dfrDatabase$INMUSUPR  == 1 ,TRUE,FALSE)
dfrDatabase[,"TOTRA_COM"] <- ifelse( dfrDatabase$OTRA_COM == 1 ,TRUE,FALSE)
dfrDatabase[,"TCARDIOVASCULAR"] <- ifelse( dfrDatabase$CARDIOVASCULAR == 1 ,TRUE,FALSE)
dfrDatabase[,"TOBESIDAD"] <- ifelse( dfrDatabase$OBESIDAD == 1 ,TRUE,FALSE)
dfrDatabase[,"TRENAL_CRONICA"] <- ifelse( dfrDatabase$RENAL_CRONICA == 1 ,TRUE,FALSE)
dfrDatabase[,"TTABAQUISMO"] <- ifelse( dfrDatabase$TABAQUISMO == 1 ,TRUE,FALSE)
dfrDatabase[,"RANGO"] <- paste( (round(dfrDatabase$EDAD / 20 ) -1)  *20 ,"a",round(dfrDatabase$EDAD / 20 )   *20)
<<<<<<< HEAD
dfrDatabase <- dfrDatabase[dfrDatabase$RESULTADO ==1 ,]
samplesize <- round(dim (dfrDatabase)[1]*.8)
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabase[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
dfrTrain <- dfrCases [s,]
dfrTest <- dfrCases [-s,]
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO , dfrTrain, method = "class")
#dtm <-rpart( SOBREVIVE ~ +TINTUBADO + EDAD , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~ TDIABETES+THIPERTENSION+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~EDAD , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~EDAD , dfrTrain, method = "anova")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANG, dfrTrain, method = "anova")
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO, dfrTrain, method = "anova")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO, dfrTrain, method = "anova")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO , dfrTrain, method = "anova")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(SOBREVIVE+ TNEUMONIA~ +TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
dtm <-rpart(TNEUMONIA~ +TINTUBADO+TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = NULL, type=4)
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(TNEUMONIA~ +TDIABETES+THIPERTENSION+TEPOC+TASMA+TINMUSUPR+TOTRA_COM+TCARDIOVASCULAR+TOBESIDAD+TRENAL_CRONICA+TTABAQUISMO+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(TNEUMONIA~ +TDIABETES+THIPERTENSION+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(TNEUMONIA~ +TDIABETES+THIPERTENSION , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(TNEUMONIA~ RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(TNEUMONIA~ TINTUBADO, dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(TNEUMONIA~ THIPERTENSION, dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "anova")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "class")
rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "NEUMONIA", type=4)
dtm
#https://duckduckgo.com/?q=decision+tree+in+r&iax=videos&ia=videos&iai=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJFJIQ0_2ijg
#https://www.gormanalysis.com/blog/decision-trees-in-r-using-rpart/
#https://www.dummies.com/programming/decision-trees-r/
#Printing dtm shows the values
#Each row corresponds to a node on the tree.
#The first entry in the row is the node number followed by a right parenthesis.
#The second is the variable and the value that make up the split.
#The third is the number of classified cases at that node.
#The fourth, loss, is the number of misclassified cases at the node. Misclassified? Compared to what? Compared to the next entry,
#yval, which is the tree’s best guess of the species at that node.
#The final entry is a parenthesized set of proportions that correspond to the proportion of each species at the node.
remove(list = ls())
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
library(devtools)
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
mydir <-  '/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario'
strUrl <-  'http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip'
strFilename <- 'datos_abiertos_covid19.zip'
strConfirmedResult  = 1
idaysForGraphToCutOff = 7
imovingAverageDays = 7
notDead = '9999-99-99'
dfrAllR0 = data.frame(stringsAsFactors = FALSE)
#######################################
# Start here
#######################################
#download and load into dataframe
setwd(mydir)
if (FALSE) {
download.file(strUrl, strFilename )
unzipfile <- unzip (strFilename, list = TRUE)
unzip (strFilename, unzipfile$Name)
dfrConfirmedCases <- read.csv ( file=unzipfile$Name)
} else {
dfrDatabase <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200811COVID19MEXICO.csv")
}
dfrDatabase[,"SOBREVIVE"] <- ifelse( dfrDatabase$FECHA_DEF == notDead ,"VIVO","MUERTO")
dfrDatabase[,"TSEXO"] <- ifelse( dfrDatabase$SEXO == 1 ,"MUJER","HOMBRE")
dfrDatabase[,"TINTUBADO"] <- ifelse( dfrDatabase$INTUBADO == 1 ,TRUE,FALSE)
dfrDatabase[,"TNEUMONIA"] <- ifelse( dfrDatabase$NEUMONIA == 1 ,TRUE,FALSE)
dfrDatabase[,"TDIABETES"] <- ifelse( dfrDatabase$DIABETES == 1 ,TRUE,FALSE)
dfrDatabase[,"THIPERTENSION"] <- ifelse( dfrDatabase$HIPERTENSION == 1 ,TRUE,FALSE)
dfrDatabase[,"TEPOC"] <- ifelse( dfrDatabase$EPOC == 1 ,TRUE,FALSE)
dfrDatabase[,"TASMA" ] <- ifelse( dfrDatabase$ASMA  == 1 ,TRUE,FALSE)
dfrDatabase[,"TINMUSUPR" ] <- ifelse( dfrDatabase$INMUSUPR  == 1 ,TRUE,FALSE)
dfrDatabase[,"TOTRA_COM"] <- ifelse( dfrDatabase$OTRA_COM == 1 ,TRUE,FALSE)
dfrDatabase[,"TCARDIOVASCULAR"] <- ifelse( dfrDatabase$CARDIOVASCULAR == 1 ,TRUE,FALSE)
dfrDatabase[,"TOBESIDAD"] <- ifelse( dfrDatabase$OBESIDAD == 1 ,TRUE,FALSE)
dfrDatabase[,"TRENAL_CRONICA"] <- ifelse( dfrDatabase$RENAL_CRONICA == 1 ,TRUE,FALSE)
dfrDatabase[,"TTABAQUISMO"] <- ifelse( dfrDatabase$TABAQUISMO == 1 ,TRUE,FALSE)
dfrDatabase[,"RANGO"] <- paste( (round(dfrDatabase$EDAD / 20 ) -1)  *20 ,"a",round(dfrDatabase$EDAD / 20 )   *20)
dfrDatabase <- dfrDatabase[dfrDatabase$RESULTADO ==1 & dfrDatabase$ENTIDAD_RES==16  ,]
=======
dfrDatabase <- dfrDatabase[dfrDatabase$RESULTADO ==1 & dfrDatabase$ENTIDAD_RES==17  ,]
>>>>>>> origin/master
samplesize <- round(dim (dfrDatabase)[1]*.8)
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabase[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
dfrTrain <- dfrCases [s,]
dfrTest <- dfrCases [-s,]
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "class")
#rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "SOBREVIVE", type=4)
<<<<<<< HEAD
dfm
dfr
dtm
=======
print(dtm)
>>>>>>> origin/master
#https://duckduckgo.com/?q=decision+tree+in+r&iax=videos&ia=videos&iai=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJFJIQ0_2ijg
#https://www.gormanalysis.com/blog/decision-trees-in-r-using-rpart/
#https://www.dummies.com/programming/decision-trees-r/
#Printing dtm shows the values
#Each row corresponds to a node on the tree.
#The first entry in the row is the node number followed by a right parenthesis.
#The second is the variable and the value that make up the split.
#The third is the number of classified cases at that node.
#The fourth, loss, is the number of misclassified cases at the node. Misclassified? Compared to what? Compared to the next entry,
#yval, which is the tree’s best guess of the species at that node.
#The final entry is a parenthesized set of proportions that correspond to the proportion of each species at the node.
remove(list = ls())
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
library(devtools)
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
mydir <-  '/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario'
strUrl <-  'http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip'
strFilename <- 'datos_abiertos_covid19.zip'
strConfirmedResult  = 1
idaysForGraphToCutOff = 7
imovingAverageDays = 7
notDead = '9999-99-99'
dfrAllR0 = data.frame(stringsAsFactors = FALSE)
#######################################
# Start here
#######################################
#download and load into dataframe
setwd(mydir)
if (FALSE) {
download.file(strUrl, strFilename )
unzipfile <- unzip (strFilename, list = TRUE)
unzip (strFilename, unzipfile$Name)
dfrConfirmedCases <- read.csv ( file=unzipfile$Name)
} else {
dfrDatabase <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200811COVID19MEXICO.csv")
}
dfrDatabase[,"SOBREVIVE"] <- ifelse( dfrDatabase$FECHA_DEF == notDead ,"VIVO","MUERTO")
dfrDatabase[,"TSEXO"] <- ifelse( dfrDatabase$SEXO == 1 ,"MUJER","HOMBRE")
dfrDatabase[,"TINTUBADO"] <- ifelse( dfrDatabase$INTUBADO == 1 ,TRUE,FALSE)
dfrDatabase[,"TNEUMONIA"] <- ifelse( dfrDatabase$NEUMONIA == 1 ,TRUE,FALSE)
dfrDatabase[,"TDIABETES"] <- ifelse( dfrDatabase$DIABETES == 1 ,TRUE,FALSE)
dfrDatabase[,"THIPERTENSION"] <- ifelse( dfrDatabase$HIPERTENSION == 1 ,TRUE,FALSE)
dfrDatabase[,"TEPOC"] <- ifelse( dfrDatabase$EPOC == 1 ,TRUE,FALSE)
dfrDatabase[,"TASMA" ] <- ifelse( dfrDatabase$ASMA  == 1 ,TRUE,FALSE)
dfrDatabase[,"TINMUSUPR" ] <- ifelse( dfrDatabase$INMUSUPR  == 1 ,TRUE,FALSE)
dfrDatabase[,"TOTRA_COM"] <- ifelse( dfrDatabase$OTRA_COM == 1 ,TRUE,FALSE)
dfrDatabase[,"TCARDIOVASCULAR"] <- ifelse( dfrDatabase$CARDIOVASCULAR == 1 ,TRUE,FALSE)
dfrDatabase[,"TOBESIDAD"] <- ifelse( dfrDatabase$OBESIDAD == 1 ,TRUE,FALSE)
dfrDatabase[,"TRENAL_CRONICA"] <- ifelse( dfrDatabase$RENAL_CRONICA == 1 ,TRUE,FALSE)
dfrDatabase[,"TTABAQUISMO"] <- ifelse( dfrDatabase$TABAQUISMO == 1 ,TRUE,FALSE)
dfrDatabase[,"RANGO"] <- paste( (round(dfrDatabase$EDAD / 20 ) -1)  *20 ,"a",round(dfrDatabase$EDAD / 20 )   *20)
<<<<<<< HEAD
dfrDatabase <- dfrDatabase[dfrDatabase$RESULTADO ==1 & dfrDatabase$ENTIDAD_RES==17  ,]
samplesize <- round(dim (dfrDatabase)[1]*.8)
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabase[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
=======
dfrDatabasePar <- dfrDatabase[dfrDatabase$RESULTADO ==1 & dfrDatabase$ENTIDAD_RES==19  ,]
samplesize <- round(dim (dfrDatabase)[1])
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabasePar[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
>>>>>>> origin/master
dfrTrain <- dfrCases [s,]
dfrTest <- dfrCases [-s,]
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "class")
#rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "SOBREVIVE", type=4)
print(dtm)
#https://duckduckgo.com/?q=decision+tree+in+r&iax=videos&ia=videos&iai=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJFJIQ0_2ijg
#https://www.gormanalysis.com/blog/decision-trees-in-r-using-rpart/
#https://www.dummies.com/programming/decision-trees-r/
#Printing dtm shows the values
#Each row corresponds to a node on the tree.
#The first entry in the row is the node number followed by a right parenthesis.
#The second is the variable and the value that make up the split.
#The third is the number of classified cases at that node.
#The fourth, loss, is the number of misclassified cases at the node. Misclassified? Compared to what? Compared to the next entry,
#yval, which is the tree’s best guess of the species at that node.
#The final entry is a parenthesized set of proportions that correspond to the proportion of each species at the node.
remove(list = ls())
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
library(devtools)
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
mydir <-  '/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario'
strUrl <-  'http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip'
strFilename <- 'datos_abiertos_covid19.zip'
strConfirmedResult  = 1
idaysForGraphToCutOff = 7
imovingAverageDays = 7
notDead = '9999-99-99'
<<<<<<< HEAD
dfrAllR0 = data.frame(stringsAsFactors = FALSE)
=======
vecListaEstados <- c(1:32)
vecnombreEstados <-c ("AGUASCALIENTES","BAJA_CALIFORNIA","BAJA_CALIFORNIA_SUR","CAMPECHE",	"COAHUILA",	"COLIMA","CHIAPAS",	"CHIHUAHUA","CDMX",	"DURANGO","GUANAJUATO",	"GUERRERO",	"HIDALGO","JALISCO","ESTADO_DE_MEXICO","MICHOACAN","MORELOS","NAYARIT","NUEVO_LEON","OAXACA","PUEBLA","QUERETARO","QUINTANA_ROO","SAN_LUIS_POTOSI","SINALOA","SONORA","TABASCO","TAMAULIPAS","TLAXCALA","VERACRUZ","YUCATAN","ZACATECAS")
>>>>>>> origin/master
#######################################
# Start here
#######################################
#download and load into dataframe
setwd(mydir)
if (FALSE) {
download.file(strUrl, strFilename )
unzipfile <- unzip (strFilename, list = TRUE)
unzip (strFilename, unzipfile$Name)
dfrConfirmedCases <- read.csv ( file=unzipfile$Name)
} else {
dfrDatabase <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200811COVID19MEXICO.csv")
}
dfrDatabase[,"SOBREVIVE"] <- ifelse( dfrDatabase$FECHA_DEF == notDead ,"VIVO","MUERTO")
dfrDatabase[,"TSEXO"] <- ifelse( dfrDatabase$SEXO == 1 ,"MUJER","HOMBRE")
dfrDatabase[,"TINTUBADO"] <- ifelse( dfrDatabase$INTUBADO == 1 ,TRUE,FALSE)
dfrDatabase[,"TNEUMONIA"] <- ifelse( dfrDatabase$NEUMONIA == 1 ,TRUE,FALSE)
dfrDatabase[,"TDIABETES"] <- ifelse( dfrDatabase$DIABETES == 1 ,TRUE,FALSE)
dfrDatabase[,"THIPERTENSION"] <- ifelse( dfrDatabase$HIPERTENSION == 1 ,TRUE,FALSE)
dfrDatabase[,"TEPOC"] <- ifelse( dfrDatabase$EPOC == 1 ,TRUE,FALSE)
dfrDatabase[,"TASMA" ] <- ifelse( dfrDatabase$ASMA  == 1 ,TRUE,FALSE)
dfrDatabase[,"TINMUSUPR" ] <- ifelse( dfrDatabase$INMUSUPR  == 1 ,TRUE,FALSE)
dfrDatabase[,"TOTRA_COM"] <- ifelse( dfrDatabase$OTRA_COM == 1 ,TRUE,FALSE)
dfrDatabase[,"TCARDIOVASCULAR"] <- ifelse( dfrDatabase$CARDIOVASCULAR == 1 ,TRUE,FALSE)
dfrDatabase[,"TOBESIDAD"] <- ifelse( dfrDatabase$OBESIDAD == 1 ,TRUE,FALSE)
dfrDatabase[,"TRENAL_CRONICA"] <- ifelse( dfrDatabase$RENAL_CRONICA == 1 ,TRUE,FALSE)
dfrDatabase[,"TTABAQUISMO"] <- ifelse( dfrDatabase$TABAQUISMO == 1 ,TRUE,FALSE)
dfrDatabase[,"RANGO"] <- paste( (round(dfrDatabase$EDAD / 20 ) -1)  *20 ,"a",round(dfrDatabase$EDAD / 20 )   *20)
<<<<<<< HEAD
dfrDatabasePar <- dfrDatabase[dfrDatabase$RESULTADO ==1 & dfrDatabase$ENTIDAD_RES==19  ,]
=======
for (i in 1:length(vecListaEstados)) {
dfrDatabasePar <- dfrDatabase[dfrDatabase$RESULTADO ==1 & dfrDatabase$ENTIDAD_RES==i  ,]
>>>>>>> origin/master
samplesize <- round(dim (dfrDatabase)[1])
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabasePar[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
dfrTrain <- dfrCases [s,]
dfrTest <- dfrCases [-s,]
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "class")
<<<<<<< HEAD
#rpart.plot(dtm, type=4, extra=101)
fancyRpartPlot(dtm, caption = "SOBREVIVE", type=4)
print(dtm)
=======
fancyRpartPlot(dtm, caption = paste("SOBREVIVE", vecnombreEstados[[i]] ), type=4)
print(dtm)
}
>>>>>>> origin/master
#https://duckduckgo.com/?q=decision+tree+in+r&iax=videos&ia=videos&iai=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJFJIQ0_2ijg
#https://www.gormanalysis.com/blog/decision-trees-in-r-using-rpart/
#https://www.dummies.com/programming/decision-trees-r/
#Printing dtm shows the values
#Each row corresponds to a node on the tree.
#The first entry in the row is the node number followed by a right parenthesis.
#The second is the variable and the value that make up the split.
#The third is the number of classified cases at that node.
#The fourth, loss, is the number of misclassified cases at the node. Misclassified? Compared to what? Compared to the next entry,
#yval, which is the tree’s best guess of the species at that node.
#The final entry is a parenthesized set of proportions that correspond to the proportion of each species at the node.
remove(list = ls())
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
library(devtools)
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
mydir <-  '/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario'
strUrl <-  'http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip'
strFilename <- 'datos_abiertos_covid19.zip'
strConfirmedResult  = 1
idaysForGraphToCutOff = 7
imovingAverageDays = 7
notDead = '9999-99-99'
vecListaEstados <- c(1:32)
vecnombreEstados <-c ("AGUASCALIENTES","BAJA_CALIFORNIA","BAJA_CALIFORNIA_SUR","CAMPECHE",	"COAHUILA",	"COLIMA","CHIAPAS",	"CHIHUAHUA","CDMX",	"DURANGO","GUANAJUATO",	"GUERRERO",	"HIDALGO","JALISCO","ESTADO_DE_MEXICO","MICHOACAN","MORELOS","NAYARIT","NUEVO_LEON","OAXACA","PUEBLA","QUERETARO","QUINTANA_ROO","SAN_LUIS_POTOSI","SINALOA","SONORA","TABASCO","TAMAULIPAS","TLAXCALA","VERACRUZ","YUCATAN","ZACATECAS")
#######################################
# Start here
#######################################
#download and load into dataframe
setwd(mydir)
if (FALSE) {
download.file(strUrl, strFilename )
unzipfile <- unzip (strFilename, list = TRUE)
unzip (strFilename, unzipfile$Name)
dfrConfirmedCases <- read.csv ( file=unzipfile$Name)
} else {
dfrDatabase <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200811COVID19MEXICO.csv")
}
dfrDatabase[,"SOBREVIVE"] <- ifelse( dfrDatabase$FECHA_DEF == notDead ,"VIVO","MUERTO")
dfrDatabase[,"TSEXO"] <- ifelse( dfrDatabase$SEXO == 1 ,"MUJER","HOMBRE")
dfrDatabase[,"TINTUBADO"] <- ifelse( dfrDatabase$INTUBADO == 1 ,TRUE,FALSE)
dfrDatabase[,"TNEUMONIA"] <- ifelse( dfrDatabase$NEUMONIA == 1 ,TRUE,FALSE)
dfrDatabase[,"TDIABETES"] <- ifelse( dfrDatabase$DIABETES == 1 ,TRUE,FALSE)
dfrDatabase[,"THIPERTENSION"] <- ifelse( dfrDatabase$HIPERTENSION == 1 ,TRUE,FALSE)
dfrDatabase[,"TEPOC"] <- ifelse( dfrDatabase$EPOC == 1 ,TRUE,FALSE)
dfrDatabase[,"TASMA" ] <- ifelse( dfrDatabase$ASMA  == 1 ,TRUE,FALSE)
dfrDatabase[,"TINMUSUPR" ] <- ifelse( dfrDatabase$INMUSUPR  == 1 ,TRUE,FALSE)
dfrDatabase[,"TOTRA_COM"] <- ifelse( dfrDatabase$OTRA_COM == 1 ,TRUE,FALSE)
dfrDatabase[,"TCARDIOVASCULAR"] <- ifelse( dfrDatabase$CARDIOVASCULAR == 1 ,TRUE,FALSE)
dfrDatabase[,"TOBESIDAD"] <- ifelse( dfrDatabase$OBESIDAD == 1 ,TRUE,FALSE)
dfrDatabase[,"TRENAL_CRONICA"] <- ifelse( dfrDatabase$RENAL_CRONICA == 1 ,TRUE,FALSE)
dfrDatabase[,"TTABAQUISMO"] <- ifelse( dfrDatabase$TABAQUISMO == 1 ,TRUE,FALSE)
dfrDatabase[,"RANGO"] <- paste( (round(dfrDatabase$EDAD / 20 ) -1)  *20 ,"a",round(dfrDatabase$EDAD / 20 )   *20)
for (i in 1:length(vecListaEstados)) {
dfrDatabasePar <- dfrDatabase[dfrDatabase$RESULTADO ==1 & dfrDatabase$ENTIDAD_RES==i  ,]
samplesize <- round(dim (dfrDatabase)[1])
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabasePar[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
dfrTrain <- dfrCases [s,]
dfrTest <- dfrCases [-s,]
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "class")
fancyRpartPlot(dtm, caption = paste("SOBREVIVE", vecnombreEstados[[i]] ), type=4)
print(dtm)
}
<<<<<<< HEAD
#https://duckduckgo.com/?q=decision+tree+in+r&iax=videos&ia=videos&iai=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJFJIQ0_2ijg
#https://www.gormanalysis.com/blog/decision-trees-in-r-using-rpart/
#https://www.dummies.com/programming/decision-trees-r/
#Printing dtm shows the values
#Each row corresponds to a node on the tree.
#The first entry in the row is the node number followed by a right parenthesis.
#The second is the variable and the value that make up the split.
#The third is the number of classified cases at that node.
#The fourth, loss, is the number of misclassified cases at the node. Misclassified? Compared to what? Compared to the next entry,
#yval, which is the tree’s best guess of the species at that node.
#The final entry is a parenthesized set of proportions that correspond to the proportion of each species at the node.
=======
#Script that creates covid-19 cases graphs for Mexico, its states and counties by detection Date (FECHA_INGRESO)
# 1) Graph  for 7 days average for new cases and accumulated, cutting 7 days  due of preliminary data
# 2) Graph with the epidemic curve
# 3) Graph with the difference  between the 7 days accumulated cases and the 7 days prior
# 4) CSV file with the  7 days average for new cases and accumulated,
# 5) Mortality csv
# 6) Mortality 7 days average Graph
# 7) R Estimate in CSV
# 8) Graph for R estimate
#  , "","FECHA_INGRESO","RESULTADO","RESULTADO_ACUM","RESULTADO_average7D","RESULTADO_averageACUM7D"
#R estimate for the above values
# Gets data from
#http://187.191.75.115/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip
#http://epidemiologia.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip
#http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip
>>>>>>> origin/master
remove(list = ls())
r = getOption("repos")
r["CRAN"] = "http://cran.us.r-project.org"
options(repos = r)
<<<<<<< HEAD
library(devtools)
library(rpart)
library(rpart.plot)
library(rattle)
library(RColorBrewer)
mydir <-  '/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario'
=======
#Omited for 3.6
#install.packages("Rcurl")
#install.packages("ggplot2")
#library("RCurl")
#library(ggplot2)
library(devtools)
library(EpiEstim)
mydir <-  '/Users/joaquin/Documents/Mios2020/covid/FechaIngreso-crecimientodiario'
>>>>>>> origin/master
strUrl <-  'http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip'
strFilename <- 'datos_abiertos_covid19.zip'
strConfirmedResult  = 1
idaysForGraphToCutOff = 7
imovingAverageDays = 7
notDead = '9999-99-99'
<<<<<<< HEAD
vecListaEstados <- c(1:32)
vecnombreEstados <-c ("AGUASCALIENTES","BAJA_CALIFORNIA","BAJA_CALIFORNIA_SUR","CAMPECHE",	"COAHUILA",	"COLIMA","CHIAPAS",	"CHIHUAHUA","CDMX",	"DURANGO","GUANAJUATO",	"GUERRERO",	"HIDALGO","JALISCO","ESTADO_DE_MEXICO","MICHOACAN","MORELOS","NAYARIT","NUEVO_LEON","OAXACA","PUEBLA","QUERETARO","QUINTANA_ROO","SAN_LUIS_POTOSI","SINALOA","SONORA","TABASCO","TAMAULIPAS","TLAXCALA","VERACRUZ","YUCATAN","ZACATECAS")
=======
dfrAllR0 = data.frame(stringsAsFactors = FALSE)
##############################################
# for a specific column  calculates the average of the last x days
##############################################
aux_averageforNDays <- function(averageCasesDataFrame,  days, columnName){
#fill vector with zeroes
averageVector<- rep(0, length(averageCasesDataFrame[,1]))
#we are going to calculate starting at days  position, to correcly calculate the average
measureVector <-  c((days+1):length (averageCasesDataFrame[,1]) )
for (i in measureVector ) {
sum <-0
window <-c( (i - days) : (i-1))
for (j in window ) {
sum= averageCasesDataFrame[j, columnName] + sum
}
average <-  sum / days
averageVector[i] = average
}
return(averageVector)
}
##############################################
# for a specific column calculates the sum of the  last x days
##############################################
aux_sumForNDays <- function(averageCasesDataFrame,  days, columnName){
#fill vector with zeroes
sums<- rep(0, length(averageCasesDataFrame[,1]))
#we are going to calculate starting at days  position, to correcly calculate the average
measureVector <-  c((days+1):length (averageCasesDataFrame[,1]) )
for (i in measureVector ) {
sum <-0
window <-c( (i - days) : (i-1))
for (j in window ) {
sum= averageCasesDataFrame[j, columnName] + sum
}
sums[i] = sum
}
return(sums)
}
##############################################
# for a specific column calculate the difference between the weekly average of today and the weekly average of last week
##############################################
aux_differenceBetweenTodayandaNDaysAverage <- function(averageCasesDataFrame,  days, columnName){
#fill vector with zeroes
sums<- rep(0, length(averageCasesDataFrame[,1]))
#we are going to calculate starting at days  position, to correctly calculate the average
measureVector <-  c((days+1):length (averageCasesDataFrame[,1]) )
for (i in measureVector ) {
sums[i]= averageCasesDataFrame[i, columnName] - averageCasesDataFrame[i-days, columnName]
}
return(sums)
}
#############################################
#Plot Accumulated VS Current cases
#############################################
generatePlotForAccumulatedandCurrentCases <- function(dfrCasesDataFrame , ProvinceTxt,daysToIgnore, daysToAverage, boolsavetoFile,strPathToSave,strFilename,poblacion){
campo="FECHA_INGRESO"
print(paste("Calculating ->",ProvinceTxt))
day_1 <- dfrCasesDataFrame[1,c(campo)]
maxRow <- length(dfrCasesDataFrame[,c(campo)])
maxDate <-dfrCasesDataFrame[maxRow-daysToIgnore,c(campo)]
# Generate Plot accumulated vs current
setwd(strPathToSave)
# Open png file
png(paste(ProvinceTxt, "-Acumvscurrent",strFilename ,".png", sep=""), width = 1024, height = 768)
# Create the plot
plot(x = head(dfrCasesDataFrame$RESULTADO_averageACUM7D,-daysToIgnore),
y = head(dfrCasesDataFrame$RESULTADO_average7D,-daysToIgnore) ,
xlab = paste("Acumulados Confirmados averageedio ", daysToIgnore," days"),
ylab="Nuevos",main=paste(ProvinceTxt,day_1,"a",maxDate),
log="xy")
with (dfrCasesDataFrame, lines(x = head( dfrCasesDataFrame$RESULTADO_averageACUM7D,-daysToIgnore),
y = head(dfrCasesDataFrame$RESULTADO_average7D,     -daysToIgnore),col="red"))
dev.off()
}
#############################################
#Generate Epidemic Curve
#############################################
generateEpidemicCurve <- function(dfrCasesDataFrame , ProvinceTxt,daysToIgnore, daysToAverage, boolsavetoFile,strPathToSave,strFilename,poblacion){
campo="FECHA_INGRESO"
print(paste("Calculating ->",ProvinceTxt))
day_1 <- dfrCasesDataFrame[1,c(campo)]
maxRow <- length(dfrCasesDataFrame[,c(campo)])
maxDate <-dfrCasesDataFrame[maxRow-daysToIgnore,c(campo)]
write.csv(dfrCasesDataFrame,paste(ProvinceTxt,strFilename,".csv", sep=""))
#EpidemicCurve Name
png(paste(ProvinceTxt, "-Casos",strFilename ,".png", sep=""), width = 1024, height = 768)
#Create the plot
barplot( head(dfrCasesDataFrame$RESULTADO,-daysToIgnore),
names.arg=head(dfrCasesDataFrame[,c(campo)],-daysToIgnore),
main=paste("Nuevos Ingresos",ProvinceTxt,day_1,"a",maxDate),
las=2,
col ="#0066cc")
dev.off()
}
#############################################
#Generate Weekly Change Curve
#############################################
generateWeeklyChangeCurve <- function(dfrCasesDataFrame , ProvinceTxt,daysToIgnore, daysToAverage, boolsavetoFile,strPathToSave,strFilename,poblacion){
campo="FECHA_INGRESO"
print(paste("Calculating ->",ProvinceTxt))
day_1 <- dfrCasesDataFrame[1,c(campo)]
maxRow <- length(dfrCasesDataFrame[,c(campo)])
maxDate <-dfrCasesDataFrame[maxRow-daysToIgnore,c(campo)]
#weeklyChange curve
colores = ifelse( head(dfrCasesDataFrame$RESULTADO_DIFSUM7D,-daysToIgnore) > 1 ,rgb(0.2,0.4,0.6,0.6), "#69b3a2")
png(paste(ProvinceTxt, "-CasosVsSemAnt",strFilename ,".png", sep=""), width = 1024, height = 768)
#Create the plot
barplot( head(dfrCasesDataFrame$RESULTADO_DIFSUM7D,-daysToIgnore),
names.arg=head(dfrCasesDataFrame[, c(campo)],-daysToIgnore),
main=paste("Nuevos Ingresos esta semana vs semana anterior",ProvinceTxt,day_1,"a",maxDate),
las=2,
col = colores)
dev.off()
}
#############################################
#Generate all the graphs
#############################################
generateGraphsForCases <- function(dfrCasesDataFrame , ProvinceTxt,daysToIgnore, daysToAverage, boolsavetoFile,strPathToSave,strFilename,poblacion,campo){
generatePlotForAccumulatedandCurrentCases (dfrCasesDataFrame , ProvinceTxt,daysToIgnore, daysToAverage, boolsavetoFile,strPathToSave,strFilename,poblacion)
generateEpidemicCurve  (dfrCasesDataFrame , ProvinceTxt,daysToIgnore, daysToAverage, boolsavetoFile,strPathToSave,strFilename,poblacion)
generateWeeklyChangeCurve (dfrCasesDataFrame , ProvinceTxt,daysToIgnore, daysToAverage, boolsavetoFile,strPathToSave,strFilename,poblacion)
}
#######################################
#generateMortalityGraph (like Epidemic Curve)
#######################################
generateMortalityGraph <-function(dfrConfirmedCases,imovingAverageDays , strProvincename, strFilename) {
dfrMortalityCases <- head(aggregateMortalityCases (dfrConfirmedCases,imovingAverageDays ), -(1+imovingAverageDays))
day_1 <- dfrMortalityCases[1,c("FECHA_DEF")]
maxRow <- length(dfrMortalityCases[,c("FECHA_DEF")])
maxDate <-dfrMortalityCases[maxRow,c("FECHA_DEF")]
write.csv(dfrMortalityCases,paste(strFilename,".csv",sep=""))
png(paste(strFilename,".png",sep=""), width = 1024, height = 768)
barplot( dfrMortalityCases$RESULTADO_SUM7D,
names.arg=dfrMortalityCases$FECHA_DEF,
main=paste("Mortalidad Suma 7 Dias",strProvincename,day_1,"a",maxDate),
las=2,
col ="#FF9000")
dev.off()
}
#############################################
#Generate Weekly Mortality Change Curve
#############################################
generateMortalityWeeklyChangeCurve <- function(dfrCasesDataFrame , ProvinceTxt,daysToIgnore, daysToAverage, strFilename){
dfrMortalityCases <- head(aggregateMortalityCases (dfrCasesDataFrame,daysToAverage ), -(1+daysToAverage))
campo="FECHA_DEF"
print(paste("Calculating ->",ProvinceTxt))
day_1 <- dfrMortalityCases [1,c(campo)]
maxRow <- length(dfrMortalityCases [,c(campo)])
maxDate <-dfrMortalityCases [maxRow-daysToIgnore,c(campo)]
#weeklyChange curve
colores = ifelse( head(dfrMortalityCases $RESULTADO_DIFSUM7D,-daysToIgnore) > 0 ,"#832E97", "#43972e")
png(paste(ProvinceTxt, "-Mortality CasosVsSemAnt",strFilename ,".png", sep=""), width = 1024, height = 768)
#Create the plot
barplot( head(dfrMortalityCases$RESULTADO_DIFSUM7D,-daysToIgnore),
names.arg=head(dfrMortalityCases [, c(campo)],-daysToIgnore),
main=paste("Nuevas Defunciones esta semana vs semana anterior",ProvinceTxt,day_1,"a",maxDate),
las=2,
col = colores)
dev.off()
}
#############################################
#Generate Mortality Graphs
#############################################
generateGraphsForMortality <-function(dfrConfirmedCases,imovingAverageDays ,strProvincename, strFilename) {
generateMortalityGraph  (dfrConfirmedCases,imovingAverageDays , strProvincename, strFilename)
#next is not very meningful
#generateMortalityWeeklyChangeCurve (dfrConfirmedCases , strProvincename ,imovingAverageDays, imovingAverageDays,strFilename)
}
#######################################
#Generate R0 for all states
#######################################
plotRstates <- function(dfrAllR0, boolsavetoFile, strPathToSave){
names(dfrAllR0) <- c("Entidad","Dia","R0")
print(dfrAllR0)
setwd(strPathToSave)
write.csv(dfrAllR0, paste("All","-R0",".csv",sep=""))
png(paste("All","-R0" ,".png",sep=""), width = 1024, height = 768)
# Increase margin size
par(mar=c(12,4,4,4))
colores = ifelse( dfrAllR0[order(-dfrAllR0$R0),3]  > 1 ,rgb(0.2,0.4,0.6,0.6), "#69b3a2")
xx <-  barplot(dfrAllR0[order(-dfrAllR0$R0),3], names.arg=dfrAllR0[order(-dfrAllR0$R0),1],main="ValoresR" ,las=2,
col=colores)
## Add text at top of bars
text(x = xx, y = dfrAllR0[order(-dfrAllR0$R0),3], label = round(dfrAllR0[order(-dfrAllR0$R0),3], digits=2),
pos = 1, cex = 0.5, col = "red")
dev.off()
}
#############################################
#Calculate R Estimation and Plot
#############################################
generateRandPlot<- function(dfrCasesDataFrame , ProvinceTxt,daysToIgnore, daysToAverage, boolsavetoFile,strPathToSave,strFilename,poblacion){
#######################
#Restimate
######################
R_estimate <- estimate_R(head(dfrCasesDataFrame$RESULTADO,-daysToIgnore) ,method = "parametric_si",
config = make_config(list(
mean_si = 3.9, std_si = 4.5)))
day_1 <- dfrCasesDataFrame[1,"FECHA_INGRESO"]
maxRow <- length(R_estimate$R$`Mean(R)`)
maxDate <- R_estimate$R$t_end[maxRow]
latestdayinR0Estimation<- dfrCasesDataFrame[maxDate,"FECHA_INGRESO"]
latestR0Value <- R_estimate$R$`Mean(R)`[maxRow]
#	 plot Restimates
setwd(strPathToSave)
write.csv(R_estimate$R, paste(ProvinceTxt,"-R Estimate",".csv",sep=""))
png(paste(ProvinceTxt,"-R Estimate", ".png",sep=""), width = 1024, height = 768)
plot(R_estimate,
options_I = list(col ="#0066cc",  ylab = "Incidencia"),
options_R = list( xlab =paste(ProvinceTxt," Del",day_1, "al",latestdayinR0Estimation, "Rt:",latestR0Value ), ylab = "R"))
dev.off()
df <- data.frame(ProvinceTxt,latestdayinR0Estimation, latestR0Value)
colnames(df) <- c("Entidad","Dia","R0")
return (df)
}
##############################################
#Calculate running sums for cases
##############################################
aggregateCases <- function(dfrCasesDataFrame,daysToAverage ){
dfrCasesDataFrame <- aggregate(formula = RESULTADO ~ FECHA_INGRESO , FUN = sum, data = dfrCasesDataFrame)
#add running sum
dfrCasesDataFrame[,"RESULTADO_ACUM"]           <- cumsum(dfrCasesDataFrame$RESULTADO)
dfrCasesDataFrame[,"RESULTADO_average7D"]      <- aux_averageforNDays(dfrCasesDataFrame, daysToAverage ,"RESULTADO")
dfrCasesDataFrame[,"RESULTADO_averageACUM7D"]  <- aux_averageforNDays(dfrCasesDataFrame, daysToAverage ,"RESULTADO_ACUM")
dfrCasesDataFrame[,"RESULTADO_SUM7D"]          <- aux_sumForNDays (dfrCasesDataFrame, daysToAverage ,"RESULTADO")
dfrCasesDataFrame[,"RESULTADO_DIFSUM7D"]       <- aux_differenceBetweenTodayandaNDaysAverage (dfrCasesDataFrame, daysToAverage ,"RESULTADO_SUM7D")
return (dfrCasesDataFrame)
}
##############################################
#Calculate running sum for Mortality Cases
#############################################
aggregateMortalityCases <- function(dfrCasesDataFrame,daysToAverage ){
#set all results to 1 , because we are adding all by FECHA_DEF
dfrCasesDataFrame[,"RESULTADO"] = 1
dfrCasesDataFrame <- aggregate(formula = RESULTADO ~ FECHA_DEF , FUN = sum, data = dfrCasesDataFrame)
#add running sum
dfrCasesDataFrame[,"RESULTADO_ACUM"]           <- cumsum(dfrCasesDataFrame$RESULTADO)
dfrCasesDataFrame[,"RESULTADO_average7D"]      <- aux_averageforNDays(dfrCasesDataFrame, daysToAverage ,"RESULTADO")
dfrCasesDataFrame[,"RESULTADO_averageACUM7D"]  <- aux_averageforNDays(dfrCasesDataFrame, daysToAverage ,"RESULTADO_ACUM")
dfrCasesDataFrame[,"RESULTADO_SUM7D"]          <- aux_sumForNDays (dfrCasesDataFrame, daysToAverage ,"RESULTADO")
dfrCasesDataFrame[,"RESULTADO_DIFSUM7D"]       <- aux_differenceBetweenTodayandaNDaysAverage (dfrCasesDataFrame, daysToAverage ,"RESULTADO_SUM7D")
return (dfrCasesDataFrame)
}
>>>>>>> origin/master
#######################################
# Start here
#######################################
#download and load into dataframe
setwd(mydir)
<<<<<<< HEAD
if (FALSE) {
=======
if (TRUE) {
>>>>>>> origin/master
download.file(strUrl, strFilename )
unzipfile <- unzip (strFilename, list = TRUE)
unzip (strFilename, unzipfile$Name)
dfrConfirmedCases <- read.csv ( file=unzipfile$Name)
} else {
<<<<<<< HEAD
dfrDatabase <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200811COVID19MEXICO.csv")
}
dfrDatabase[,"SOBREVIVE"] <- ifelse( dfrDatabase$FECHA_DEF == notDead ,"VIVO","MUERTO")
dfrDatabase[,"TSEXO"] <- ifelse( dfrDatabase$SEXO == 1 ,"MUJER","HOMBRE")
dfrDatabase[,"TINTUBADO"] <- ifelse( dfrDatabase$INTUBADO == 1 ,TRUE,FALSE)
dfrDatabase[,"TNEUMONIA"] <- ifelse( dfrDatabase$NEUMONIA == 1 ,TRUE,FALSE)
dfrDatabase[,"TDIABETES"] <- ifelse( dfrDatabase$DIABETES == 1 ,TRUE,FALSE)
dfrDatabase[,"THIPERTENSION"] <- ifelse( dfrDatabase$HIPERTENSION == 1 ,TRUE,FALSE)
dfrDatabase[,"TEPOC"] <- ifelse( dfrDatabase$EPOC == 1 ,TRUE,FALSE)
dfrDatabase[,"TASMA" ] <- ifelse( dfrDatabase$ASMA  == 1 ,TRUE,FALSE)
dfrDatabase[,"TINMUSUPR" ] <- ifelse( dfrDatabase$INMUSUPR  == 1 ,TRUE,FALSE)
dfrDatabase[,"TOTRA_COM"] <- ifelse( dfrDatabase$OTRA_COM == 1 ,TRUE,FALSE)
dfrDatabase[,"TCARDIOVASCULAR"] <- ifelse( dfrDatabase$CARDIOVASCULAR == 1 ,TRUE,FALSE)
dfrDatabase[,"TOBESIDAD"] <- ifelse( dfrDatabase$OBESIDAD == 1 ,TRUE,FALSE)
dfrDatabase[,"TRENAL_CRONICA"] <- ifelse( dfrDatabase$RENAL_CRONICA == 1 ,TRUE,FALSE)
dfrDatabase[,"TTABAQUISMO"] <- ifelse( dfrDatabase$TABAQUISMO == 1 ,TRUE,FALSE)
dfrDatabase[,"RANGO"] <- paste( (round(dfrDatabase$EDAD / 20 ) -1)  *20 ,"a",round(dfrDatabase$EDAD / 20 )   *20)
for (i in 1:length(vecListaEstados)) {
dfrDatabasePar <- dfrDatabase[dfrDatabase$RESULTADO ==1 & dfrDatabase$ENTIDAD_RES==i  ,]
samplesize <- round(dim (dfrDatabase)[1])
s <-sample(samplesize,round(samplesize*.8))
dfrCases<-dfrDatabasePar[1:samplesize,c("TSEXO","TINTUBADO","TNEUMONIA","EDAD","TDIABETES","THIPERTENSION","TEPOC","TASMA","TINMUSUPR","TOTRA_COM","TCARDIOVASCULAR","TOBESIDAD","TRENAL_CRONICA","TTABAQUISMO","RESULTADO","FECHA_DEF","RANGO","SOBREVIVE")]
dfrTrain <- dfrCases [s,]
dfrTest <- dfrCases [-s,]
dtm <-rpart(SOBREVIVE~ TNEUMONIA+TINTUBADO+RANGO , dfrTrain, method = "class")
fancyRpartPlot(dtm, caption = paste("SOBREVIVE", vecnombreEstados[[i]] ), type=4)
print(dtm)
}
=======
dfrConfirmedCases <- read.csv ("/media/joaquin/Nuevo_vol/misdoc/Mios2020/covid19/FechaIngreso-crecimientodiario/backup/200805COVID19MEXICO.csv")
}
View(dfrConfirmedCases)
View(dfrConfirmedCases)
>>>>>>> origin/master
